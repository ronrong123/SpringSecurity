<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model @RequestMapping -->
	<annotation-driven />

	<!-- 정적컨텐츠 : css, image, js -->
	<resources mapping="/resources/**" location="/resources/" />
	<!-- <tx:annotation-driven transaction-manager="txManager" /> -->
	<!-- TransactionManager 적용범위 -->
	<!-- TransactionManager bean 등록 -->
	<beans:bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<!-- readonly를하면 transaction처리 안함 -->
			<tx:method name="insert*" no-rollback-for="Exception" />
			<!-- rollback-for="Exception" : 에러가나면 롤백처리해라 -->
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- TransactionManager AOP 설정 -->
	<aop:config>
		<aop:pointcut id="trPointcut"
			expression="execution(* com.company..*Impl.*(..))" />
		<aop:advisor pointcut-ref="trPointcut"
			advice-ref="txAdvice" />
	</aop:config>
	<!-- @Aspect, @Pointcut, @Before -->
	<aop:aspectj-autoproxy>
	</aop:aspectj-autoproxy>
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	
	
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="3"></beans:property>
		<!-- order: 순서를 정해주는것 views의 파일은 3번째 순서로 작성됨? -->
	</beans:bean>
	<beans:bean
		class="org.springframework.web.servlet.view.UrlBasedViewResolver"
		p:order="2"
		p:viewClass="org.springframework.web.servlet.view.tiles3.TilesView" />  <!-- p:order <beans:property name="order" value="3">이랑 같음 -->
	<!--Don't add suffix or prefix like you do with .jsp files -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:value>/WEB-INF/tiles.xml</beans:value>
		</beans:property>
	</beans:bean>

	<!-- @Component, @Controller, @Service, @Repository 처리 -->
	<context:component-scan
		base-package="com.company.temp" />



</beans:beans>
